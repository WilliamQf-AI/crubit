# Part of the Crubit project, under the Apache License v2.0 with LLVM
# Exceptions. See /LICENSE for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Automatically @generated Cargo.toml for the Rust crate generate_bindings.

[package]
name = "generate_bindings"
edition = "2021"

[lib]
path = "../../../../rs_bindings_from_cc/generate_bindings/lib.rs"

[dependencies]
cpp_type_name = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/cpp_type_name" }
generate_comment = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_comment" }
generate_enum = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_enum" }
generate_function = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_function" }
generate_function_thunk = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_function_thunk" }
generate_struct_and_union = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_struct_and_union" }
has_bindings = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/has_bindings" }
rs_type_kind = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/rs_type_kind" }
arc_anyhow = { path = "../../../../cargo/common/arc_anyhow" }
code_gen_utils = { path = "../../../../cargo/common/code_gen_utils" }
crubit_abi_type = { path = "../../../../cargo/common/crubit_abi_type" }
crubit_feature = { path = "../../../../cargo/common/crubit_feature" }
error_report = { path = "../../../../cargo/common/error_report" }
errors = { path = "../../../../cargo/common/errors" }
ffi_types = { path = "../../../../cargo/common/ffi_types" }
token_stream_printer = { path = "../../../../cargo/common/token_stream_printer" }
ir = { path = "../../../../cargo/rs_bindings_from_cc/ir" }
database = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/database/database" }
flagset.workspace = true
itertools.workspace = true
proc-macro2.workspace = true
quote.workspace = true
syn.workspace = true
unicode-ident.workspace = true
